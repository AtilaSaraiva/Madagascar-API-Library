/* This file is automatically generated. DO NOT EDIT! */

#ifndef _sf_conjprec_h
#define _sf_conjprec_h


#include "_bool.h"
#include "_solver.h"


typedef void (*sf_operator2)(int,float*);


void sf_conjprec_init(int nx1     /* preconditioned size */, 
		      int nr1     /* residual size */, 
		      float eps1  /* scaling */,
		      float tol1  /* tolerance */, 
		      bool verb1  /* verbosity flag */, 
		      bool hasp01 /* if has initial model */);
/*< solver constructor >*/


void sf_conjprec_close(void);
/*< Free allocated space >*/


void sf_conjprec(sf_operator oper  /* linear operator */, 
		 sf_operator2 prec /* preconditioning */, 
		 float* p          /* preconditioned */, 
		 float* x          /* model */, 
		 const float* dat  /* data */, 
		 int niter         /* number of iterations */);
/*< Conjugate gradient solver with preconditioning >*/

#endif
