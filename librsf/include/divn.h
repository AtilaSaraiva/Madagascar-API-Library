/* This file is automatically generated. DO NOT EDIT! */

#ifndef _sf_divn_h
#define _sf_divn_h


#include "_bool.h"


void sf_divn_init(int ndim   /* number of dimensions */, 
		  int nd     /* data size */, 
		  int *ndat  /* data dimensions [ndim] */, 
		  int *nbox  /* smoothing radius [ndim] */, 
		  int niter1 /* number of iterations */,
		  bool verb  /* verbosity */);
/*< initialize >*/


void sf_divn_close (void);
/*< free allocated storage >*/


void sf_divn (float* num, float* den,  float* rat);
/*< smoothly divide rat=num/den >*/


void sf_divne (float* num, float* den,  float* rat, float eps);
/*< smoothly divide rat=num/den with preconditioning >*/


void sf_divn_combine (const float* one, const float* two, float *prod);
/*< compute product of two divisions >*/


void sf_divn_combine_sign (const float* one, const float* two, float *prod);
/*< compute product of two divisions (with a sign) >*/

#endif
