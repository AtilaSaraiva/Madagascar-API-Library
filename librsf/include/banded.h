/* This file is automatically generated. DO NOT EDIT! */

#ifndef _sf_banded_h
#define _sf_banded_h


typedef struct sf_Bands *sf_bands;
/* abstract data type */


sf_bands sf_banded_init (int n    /* matrix size */, 
			 int band /* band size */);
/*< initialize >*/


void sf_banded_define (sf_bands slv, 
		       float* diag  /* diagonal [n] */, 
		       float** offd /* off-diagonal [band][n] */);
/*< define the matrix >*/


void sf_banded_const_define (sf_bands slv, 
			     float diag        /* diagonal */, 
			     const float* offd /* off-diagonal [band] */);
/*< define matrix with constant diagonal coefficients >*/


void sf_banded_const_define_eps (sf_bands slv, 
				 float diag        /* diagonal */, 
				 const float* offd /* off-diagonal [band] */, 
				 int nb            /* size of the boundary */,
				 float eps         /* regularization parameter */);
/*< define matrix with constant diagonal coefficients 
  and regularized b.c. >*/


void sf_banded_const_define_reflect (sf_bands slv, 
				     float diag        /* diagonal */, 
				     const float* offd /* off-diagonal [band] */);
/*< define matrix with constant diagonal coefficients  
  and reflecting b.c. >*/


void sf_banded_solve (const sf_bands slv, float* b);
/*< invert (in place) >*/


void sf_banded_close (sf_bands slv);
/*< free allocated storage >*/

#endif
