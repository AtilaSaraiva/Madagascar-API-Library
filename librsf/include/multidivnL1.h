/* This file is automatically generated. DO NOT EDIT! */

#ifndef _sf_multidivnL1_h
#define _sf_multidivnL1_h


#include "helix.h"


void sf_multidivnL1_init(int nw       /* number of components */,
		       int ndim     /* number of dimensions */, 
		       int n1        /* data size */,
		       int *ndat    /* data dimensions [ndim] */, 
		       int *nbox    /* smoothing radius [ndim] */,
		       float* den   /* denominator [nw*nd] */,
		       sf_filter aa /* data filter */,
		       float perc   /* percentage for sharpening */,
		       bool verb1    /* verbosity flag */);
/*< initialize >*/


void sf_multidivnL1_close (void);
/*< free allocated storage >*/


void sf_multidivnL1 (float* num  /* numerator [data]*/,
		   float* rat  /* ratio [model]*/,
		   int niter   /* number of POCS iterations */,
		   int liter   /* number of shaping CG iteration */);
/*< smoothly L1 divide num/rat >*/

#endif
