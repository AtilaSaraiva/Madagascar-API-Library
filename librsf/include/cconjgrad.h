/* This file is automatically generated. DO NOT EDIT! */

#ifndef _sf_cconjgrad_h
#define _sf_cconjgrad_h


#include "_bool.h"
#include "c99.h"
#include "_solver.h"


void sf_cconjgrad_init(int np1     /* preconditioned size */, 
		       int nx1     /* model size */, 
		       int nd1     /* data size */, 
		       int nr1     /* residual size */, 
		       float eps1  /* scaling */,
		       float tol1  /* tolerance */, 
		       bool verb1  /* verbosity flag */, 
		       bool hasp01 /* if has initial model */);
/*< solver constructor >*/


void sf_cconjgrad_close(void);
/*< Free allocated space >*/


void sf_cconjgrad(sf_coperator prec     /* data preconditioning */, 
		  sf_coperator oper     /* linear operator */, 
		  sf_coperator shape    /* shaping operator */, 
		  sf_complex* p         /* preconditioned model */, 
		  sf_complex* x         /* estimated model */, 
		  const sf_complex* dat /* data */, 
		  int niter             /* number of iterations */);
/*< Conjugate gradient solver with shaping >*/

#endif
