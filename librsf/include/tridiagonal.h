/* This file is automatically generated. DO NOT EDIT! */

#ifndef _sf_tridiagonal_h
#define _sf_tridiagonal_h


#include "_bool.h"


typedef struct sf_Tris *sf_tris;
/* abstract data type */


sf_tris sf_tridiagonal_init (int n /* matrix size */);
/*< initialize >*/


void sf_tridiagonal_define (sf_tris slv /* solver object */, 
			    float* diag /* diagonal */, 
			    float* offd /* off-diagonal */);
/*< fill the matrix >*/


void sf_tridiagonal_const_define (sf_tris slv /* solver object */, 
				  float diag  /* diagonal */, 
				  float offd  /* off-diagonal */,
				  bool damp   /* damping */);
/*< fill the matrix for the Toeplitz case >*/


void sf_tridiagonal_solve (sf_tris slv /* solver object */, 
			   float* b /* in - right-hand side, out - solution */);
/*< invert the matrix >*/


void sf_tridiagonal_close (sf_tris slv);
/*< free allocated storage >*/

#endif
